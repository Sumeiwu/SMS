package jpa.service;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;

import jpa.dao.StudentDAO;
import jpa.entitymodels.Course;
import jpa.entitymodels.Student;

public class StudentService implements StudentDAO {
	private EntityManagerFactory entityManagerFactory = null;
	private EntityManager entitymanager = null;

	public StudentService() {
		this.entityManagerFactory = Persistence.createEntityManagerFactory("SMS");
		this.entitymanager = this.entityManagerFactory.createEntityManager();
	}

	public List<Student> getAllStudents() {
		// TODO Auto-generated method stub
		// This method reads the student table in your database and returns the data as
		// a List<Student>
		String sql = "SELECT s FROM Student s";
		TypedQuery<Student> query = entitymanager.createQuery(sql, Student.class);
		List<Student> students = query.getResultList();
		//for (Student stu:students) System.out.println(stu);

		return students;
	}

	public Student getStudentByEmail(String sEmail) {
		// TODO Auto-generated method stub
		// This method takes a Student’s email as a String and parses the student list
		// for a Student with that email and
		// returns a Student Object.

		Student student = entitymanager.find(Student.class, sEmail);

		return student;
	}

	public boolean validateStudent(String sEmail, String sPassword) {
		// TODO Auto-generated method stub
		// This method takes two parameters: the first one is the user email and the
		// second one is the password from the user input.
		// Return whether or not a student was found.

		Student stu = getStudentByEmail(sEmail);
 
		if (stu != null && stu.getsPass().equals(sPassword)) return true;
		else return false;
	}

	public void registerStudentToCourse(String sEmail, int cId) {
		// TODO Auto-generated method stub
		// After a successful student validation, this method takes a Student’s email
		// and a Course ID.
		// It checks in the join table (i.e. Student_Course) generated by JPA to find if
		// a Student with that Email is currently attending a Course with that ID.
		// If the Student is not attending that Course, register the student to that
		// course; otherwise not.
		
		Student stu = entitymanager.find(Student.class, sEmail);
		//System.out.println(student);
		Course newCourse = entitymanager.find(Course.class, cId);
		//System.out.println(course);
		
		if (stu != null && newCourse != null) {
			List<Course> registerCourses = stu.getsCourses();
		
			for (Course eachCourse : registerCourses) {
				if (eachCourse.getcId() == newCourse.getcId()) {
					System.out.println("\n--Already Registered in Course ID " + eachCourse.getcId() + "--"); 
					return;
				}
			}
			stu.getsCourses().add(newCourse);

			entitymanager.getTransaction().begin();
			entitymanager.persist(stu);
			entitymanager.getTransaction().commit();
		}
		
		else {
			System.out.println("\n--Please provide valid input--");
		}
	}
	
	public List<Course> getStudentCourses(String sEmail) {
		// TODO Auto-generated method stub
		// This method takes a Student’s Email as a parameter and would find all the
		// courses a student is registered.
		Student stu = getStudentByEmail(sEmail);
		List<Course> courses = stu.getsCourses();
		return courses;
	}

}
